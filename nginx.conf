# Basic configuration to allow NGINX to handle connections
events {
    worker_connections 1024;
}

# TCP-level routing for RabbitMQ AMQP protocol
stream {
    upstream rabbitmq_amqp {
        # Main RabbitMQ node
       server rabbit1:5672 max_fails=1 fail_timeout=5s;

        # Backup RabbitMQ node (used only if the main fails)
        server rabbit2:5672 backup;
    }

    server {
        listen 5679;  # Custom port for incoming AMQP traffic (acts like a proxy to RabbitMQ)

        proxy_pass rabbitmq_amqp;

        # Optional (default is usually fine, but you can tune for reliability)
        proxy_timeout 5s;
        proxy_connect_timeout 3s;
    }
}

# HTTP-level routing for RabbitMQ Management UIs
http {
    # Rabbit1 dashboard on port 15679
    server {
        listen 15679;

        location / {
            proxy_pass http://rabbit1:15672;

            proxy_set_header Host              $host;
            proxy_set_header X-Real-IP         $remote_addr;
            proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        }
    }

    # Rabbit2 dashboard on port 15680
    server {
        listen 15680;

        location / {
            proxy_pass http://rabbit2:15672;

            proxy_set_header Host              $host;
            proxy_set_header X-Real-IP         $remote_addr;
            proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        }
    }
}